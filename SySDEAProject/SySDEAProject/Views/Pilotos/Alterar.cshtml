@model SySDEAProject.Models.Piloto

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Piloto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPessoa.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPessoa.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="text" name="UserPessoa.cpf" id="UserPessoa.cpf" value="@Model.UserPessoa.cpf.ToString("00000000000")" readonly />

                @Html.ValidationMessageFor(model => model.UserPessoa.cpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.EnderecoPessoa.cep, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="text" name="UserPessoa.EnderecoPessoa.cep" id="UserPessoa.EnderecoPessoa.cep" value="@Model.UserPessoa.EnderecoPessoa.cep.ToString()" />
                @Html.ValidationMessageFor(model => model.UserPessoa.EnderecoPessoa.cep, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.EnderecoPessoa.rua, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPessoa.EnderecoPessoa.rua, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPessoa.EnderecoPessoa.rua, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.EnderecoPessoa.numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPessoa.EnderecoPessoa.numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPessoa.EnderecoPessoa.numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.EnderecoPessoa.complemento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPessoa.EnderecoPessoa.complemento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPessoa.EnderecoPessoa.complemento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.EnderecoPessoa.bairro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPessoa.EnderecoPessoa.bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPessoa.EnderecoPessoa.bairro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.EnderecoPessoa.municipio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPessoa.EnderecoPessoa.municipio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPessoa.EnderecoPessoa.municipio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.EnderecoPessoa.uf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPessoa.EnderecoPessoa.uf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPessoa.EnderecoPessoa.uf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.tel1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="text" name="UserPessoa.tel1" id="UserPessoa.tel1"
                       @if (Model.UserPessoa.tel1 != 0) { ViewBag.tel1value = Model.UserPessoa.tel1.ToString("0000000000"); }
                       value="@ViewBag.tel1value" />

                @Html.ValidationMessageFor(model => model.UserPessoa.tel1, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.tel2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @if (Model.UserPessoa.tel2 != null && Model.UserPessoa.tel2 != 0)
                {
                    ViewBag.tel2value = Model.UserPessoa.tel2;
                    <input class="form-control" type="text" name="UserPessoa.tel2" id="UserPessoa.tel2" value="@ViewBag.tel2value.ToString("0000000000")" />
                }
                else
                {
                    <input class="form-control" type="text" name="UserPessoa.tel2" id="UserPessoa.tel2" />
                }
                @Html.ValidationMessageFor(model => model.UserPessoa.tel2, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.telContato, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="text" name="tContato" id="tContato" />
                @Html.ValidationMessageFor(model => model.telContato, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPessoa.dataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="datefield" data-val="true" data-val-required="Date is required"
                       id="dataNascimento" data-date-format="dd-MM-yyyy" placeholder="dd-MM-yyyy" name="dataNascimento" type="date" value="@Model.UserPessoa.dataNascimento.Year.ToString("0000")-@Model.UserPessoa.dataNascimento.Month.ToString("00")-@Model.UserPessoa.dataNascimento.Day.ToString("00")" />
                @Html.ValidationMessageFor(model => model.UserPessoa.dataNascimento, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idEmpresa, "idEmpresa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idEmpresa", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idEmpresa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nivelAtual, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("nivelAtual", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nivelAtual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.observacoes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.observacoes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.observacoes, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CANACPiloto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CANACPiloto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CANACPiloto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nivelAtual, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nivelAtual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nivelAtual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.observacoes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.observacoes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.observacoes, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar à lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquerymask")
}
